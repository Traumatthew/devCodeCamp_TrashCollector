@model TrashCollector.Models.CustomerAndAccountViewModel

@{
    ViewBag.Title = "EditProfile";
}

<h2 class="text-light">Edit Profile</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal text-light">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.cust.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.cust.FirstName, htmlAttributes: new { @class = "control-label col-md-1 bg-dark rounded" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cust.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cust.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cust.LastName, htmlAttributes: new { @class = "control-label col-md-1 bg-dark rounded" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cust.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cust.LastName, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.cust.Phone, htmlAttributes: new { @class = "control-label col-md-1 bg-dark rounded" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cust.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cust.Phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cust.Street, htmlAttributes: new { @class = "control-label col-md-1 bg-dark rounded" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cust.Street, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cust.Street, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cust.City, htmlAttributes: new { @class = "control-label col-md-1 bg-dark rounded" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cust.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cust.Street, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cust.State, htmlAttributes: new { @class = "control-label col-md-1 bg-dark rounded" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cust.State, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cust.State, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cust.Zip, htmlAttributes: new { @class = "control-label col-md-1 bg-dark rounded" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cust.Zip, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cust.Zip, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.account.WeeklyPickUpDay, htmlAttributes: new { @class = "control-label col-md-2 bg-dark rounded" })
        <div class="col-md-10">

            @Html.DropDownListFor(model => model.account.WeeklyPickUpDay, new List<SelectListItem>
          {
              new SelectListItem{Text = "Monday", Value = "Monday" },
              new SelectListItem{Text = "Tuesday", Value = "Tuesday" },
              new SelectListItem{Text = "Wednesday", Value = "Wednesday" },
              new SelectListItem{Text = "Thursday", Value = "Thursday" },
              new SelectListItem{Text = "Friday", Value = "Friday" },
              new SelectListItem{Text = "Saturday", Value = "Saturday" },
              new SelectListItem{Text = "Sunday", Value = "Sunday" },
          })

            @Html.ValidationMessageFor(model => model.cust.Zip, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-outline-primary btn-lg bg-danger text-light CustomerButton" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Cancel", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
